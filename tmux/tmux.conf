set -g default-terminal "screen-256color"

# remap prefix
set -g prefix `
bind ` send-prefix
unbind C-b

# force a reload of the config file
unbind r
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf

# use layout
bind P source-file $XDG_CONFIG_HOME/tmux/layout.conf

# act like vim
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -t vi-copy 'y' copy-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# put tmux buffer to system clipboard
#bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# use vim keys to navigate panes
unbind-key h          ; bind-key -r h select-pane -L
unbind-key l          ; bind-key -r l select-pane -R
unbind-key j          ; bind-key -r j select-pane -D
unbind-key k          ; bind-key -r k select-pane -U

# just adding repeatable to next/prev windows
unbind-key n          ; bind-key -r n next-window
unbind-key p          ; bind-key -r p previous-window

# splits
unbind-key v          ; bind-key v split-window -h -c "#{pane_current_path}"
unbind-key s          ; bind-key s split-window -v -c "#{pane_current_path}"

# mouse selecting
#set -g mouse-utf8 on
set -g mouse on

# keep current directory when creating new windows
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# use the vim-airline colors without needing to start vim first
if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"

# neovim :checkhealth recommends these settings
set-option -sg escape-time 0 # for neovim cursor delay
set-option -g focus-events on
set-option -sa terminal-features ',xterm-256color:RGB'
